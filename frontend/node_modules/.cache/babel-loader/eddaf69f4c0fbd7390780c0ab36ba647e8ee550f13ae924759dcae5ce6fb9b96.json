{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\riyad\\\\money-tracker-app\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n  const [resIncomes, setResIncomes] = useState({});\n\n  //calculate incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-incomes`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const getSingleIncomes = async id => {\n    const response = await axios.get(`${BASE_URL}get-incomes/${id}`);\n    setResIncomes({\n      ...resIncomes,\n      title: response.data.title,\n      amount: response.data.amount,\n      date: new Date(response.data.date).toISOString().split(\"T\")[0],\n      category: response.data.category,\n      description: response.data.description\n    });\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate expenses\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expenses`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalIncome = 0;\n    expenses.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      selectedId,\n      setSelectedId,\n      getSingleIncomes,\n      resIncomes\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(GlobalProvider, \"LfVChwu6xiUa2LYDzkISZQNzGJ8=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","_ref","_s","children","incomes","setIncomes","expenses","setExpenses","error","setError","selectedId","setSelectedId","resIncomes","setResIncomes","addIncome","income","response","post","catch","err","data","message","getIncomes","get","console","log","getSingleIncomes","id","title","amount","date","Date","toISOString","split","category","description","deleteIncome","res","delete","totalIncome","forEach","addExpense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","createdAt","slice","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/Project/riyad/money-tracker-app/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [expenses, setExpenses] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const [resIncomes, setResIncomes] = useState({});\r\n\r\n  //calculate incomes\r\n  const addIncome = async (income) => {\r\n    const response = await axios\r\n      .post(`${BASE_URL}add-income`, income)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n      });\r\n    getIncomes();\r\n  };\r\n\r\n  const getIncomes = async () => {\r\n    const response = await axios.get(`${BASE_URL}get-incomes`);\r\n    setIncomes(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  const getSingleIncomes = async (id) => {\r\n    const response = await axios.get(`${BASE_URL}get-incomes/${id}`);\r\n    setResIncomes({\r\n      ...resIncomes,\r\n      title: response.data.title,\r\n      amount: response.data.amount,\r\n      date: new Date(response.data.date).toISOString().split(\"T\")[0],\r\n      category: response.data.category,\r\n      description: response.data.description,\r\n    });\r\n  };\r\n\r\n  const deleteIncome = async (id) => {\r\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n    getIncomes();\r\n  };\r\n\r\n  const totalIncome = () => {\r\n    let totalIncome = 0;\r\n    incomes.forEach((income) => {\r\n      totalIncome = totalIncome + income.amount;\r\n    });\r\n\r\n    return totalIncome;\r\n  };\r\n\r\n  //calculate expenses\r\n  const addExpense = async (income) => {\r\n    const response = await axios\r\n      .post(`${BASE_URL}add-expense`, income)\r\n      .catch((err) => {\r\n        setError(err.response.data.message);\r\n      });\r\n    getExpenses();\r\n  };\r\n\r\n  const getExpenses = async () => {\r\n    const response = await axios.get(`${BASE_URL}get-expenses`);\r\n    setExpenses(response.data);\r\n    console.log(response.data);\r\n  };\r\n\r\n  const deleteExpense = async (id) => {\r\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n    getExpenses();\r\n  };\r\n\r\n  const totalExpenses = () => {\r\n    let totalIncome = 0;\r\n    expenses.forEach((income) => {\r\n      totalIncome = totalIncome + income.amount;\r\n    });\r\n\r\n    return totalIncome;\r\n  };\r\n\r\n  const totalBalance = () => {\r\n    return totalIncome() - totalExpenses();\r\n  };\r\n\r\n  const transactionHistory = () => {\r\n    const history = [...incomes, ...expenses];\r\n    history.sort((a, b) => {\r\n      return new Date(b.createdAt) - new Date(a.createdAt);\r\n    });\r\n\r\n    return history.slice(0, 3);\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        addIncome,\r\n        getIncomes,\r\n        incomes,\r\n        deleteIncome,\r\n        expenses,\r\n        totalIncome,\r\n        addExpense,\r\n        getExpenses,\r\n        deleteExpense,\r\n        totalExpenses,\r\n        totalBalance,\r\n        transactionHistory,\r\n        error,\r\n        setError,\r\n        selectedId,\r\n        setSelectedId,\r\n        getSingleIncomes,\r\n        resIncomes,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}